swagger: '2.0'
info:
  title: Meeting Scheduler API
  contact:
    name: API Support
    email: zednis@rpi.edu
  version: 1.0.0
schemes:
  - http
produces:
  - application/json
tags:
- name: Meetings
- name: Users
- name: Rooms
- name: Suggestions
paths:

  /api/rooms:

    post:
      summary: Create Meeting Room Record
      parameters:
        - name: create meeting room request object
          in: body
          description: create meeting room request object
          required: true
          schema:
            $ref: "#/definitions/CreateMeetingRoomRequest"
      tags:
      - Rooms
      responses:
        201:
          description: Created
          headers:
            Location:
              description: relative URL to created meeting room record
              type: string
          schema:
            $ref: "#/definitions/ActionResponse"

    get:
      summary: Retrieve List of Meeting Room Records
      parameters:
        - in: query
          name: resources
          description: resource available in room
          type: string
          required: false
        - in: query
          name: availableFrom
          description: availability window start datetime
          type: string
          format: date-time
          required: false
        - in: query
          name: availableTo
          description: availability window end datetime
          type: string
          format: date-time
          required: false
        - in: query
          name: nameContains
          description: room name search parameter
          type: string
          required: false
      tags:
        - Rooms
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ListOfMeetingRoomInfo"

  /api/rooms/{roomName}:

    get:
      summary: Retrieve Meeting Room Record
      parameters:
        - $ref: "#/parameters/roomName"
      tags:
        - Rooms
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MeetingRoomInfo"

    patch:
      summary: Update Meeting Room Record
      parameters:
        - $ref: "#/parameters/roomName"
        - name: patch request
          in: body
          description: patch request
          required: true
          schema:
            $ref: "#/definitions/PatchRequest"
      tags:
        - Rooms
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"

    put:
      summary: Replace Meeting Room Record
      parameters:
        - $ref: "#/parameters/roomName"
        - name: meeting room record
          in: body
          required: true
          description: meeting room record
          schema:
            $ref: "#/definitions/MeetingRoomInfo"
      tags:
        - Rooms
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"

    delete:
      summary: Delete Meeting Room Record
      parameters:
        - $ref: "#/parameters/roomName"
      tags:
        - Rooms
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"


  /api/rooms/{roomName}/meetings:

    get:
      summary: Retrieve List of Meeting Records for Meeting Room
      parameters:
        - $ref: "#/parameters/roomName"
      tags:
        - Rooms
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ListOfMeetingInfo"


  /api/users:

    post:
      summary: Create User Record
      parameters:
        - name: create user request object
          in: body
          description: create user request object
          required: true
          schema:
            $ref: "#/definitions/CreateUserRequest"
      tags:
        - Users
      responses:
        201:
          description: Created
          headers:
            Location:
              description: relative URL to created user record
              type: string
          schema:
            $ref: "#/definitions/ActionResponse"

    get:
      summary: Retrieve List of User Records
      parameters:
        - in: query
          name: email
          description: user email
          required: false
          type: string
        - in: query
          name: givenName
          description: firstname/given name
          required: false
          type: string
        - in: query
          name: familyName
          description: lastname/family name
          required: false
          type: string
      tags:
        - Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ListOfUserInfo"


  /api/users/{userId}:

    get:
      summary: Retrieve User Record
      parameters:
        - $ref: "#/parameters/userId"
      tags:
        - Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserInfo"

    patch:
      summary: Update User Record
      parameters:
        - $ref: "#/parameters/userId"
        - name: patch request
          in: body
          description: patch request
          required: true
          schema:
            $ref: "#/definitions/PatchRequest"
      tags:
        - Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"

    put:
      summary: Replace User Record
      parameters:
        - $ref: "#/parameters/userId"
        - name: user record
          in: body
          description: user record
          required: true
          schema:
            $ref: "#/definitions/UserInfo"
      tags:
        - Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"

    delete:
      summary: Delete User Record
      parameters:
        - $ref: "#/parameters/userId"
      tags:
        - Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"


  /api/users/{userId}/meetings:

    get:
      summary: Retrieve List of Meeting Records for User
      parameters:
        - $ref: "#/parameters/userId"
      tags:
        - Users
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ListOfMeetingInfo"

  /api/meetings:

    post:
      summary: Create Meeting Record
      parameters:
        - name: create meeting request object
          in: body
          description: create meeting request object
          required: true
          schema:
            $ref: "#/definitions/CreateMeetingRequest"
      tags:
        - Meetings
      responses:
        201:
          description: Created
          headers:
            Location:
              description: relative URL to created meeting record
              type: string
          schema:
            $ref: "#/definitions/ActionResponse"

  /api/meetings/{meetingId}:

    get:
      summary: Retrieve Meeting Record
      parameters:
      - $ref: "#/parameters/meetingId"
      tags:
       - Meetings
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MeetingInfo"

    patch:
      summary: Update Meeting Record
      parameters:
        - $ref: "#/parameters/meetingId"
        - name: patch request
          in: body
          description: patch request
          required: true
          schema:
            $ref: "#/definitions/PatchRequest"
      tags:
        - Meetings
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"

    put:
      summary: Replace Meeting Record
      parameters:
      - $ref: "#/parameters/meetingId"
      - name: meeting record
        in: body
        description: meeting record
        required: true
        schema:
          $ref: "#/definitions/MeetingInfo"
      tags:
      - Meetings
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"

    delete:
      summary: Delete Meeting Record
      parameters:
      - $ref: '#/parameters/meetingId'
      tags:
       - Meetings
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ActionResponse"


  /api/meetingSuggestion:

    post:
      summary: Suggest Meeting Times Given List of Participants
      parameters:
        - name: meeting suggestion object
          in: body
          description: meeting suggestion object
          required: true
          schema:
            $ref: "#/definitions/MeetingSuggestionRequest"
      tags:
        - Suggestions
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MeetingSuggestionResponse"

parameters:
  roomName:
    name: roomName
    in: path
    description: room name
    required: true
    type: string

  meetingId:
    name: meetingId
    in: path
    description: meeting identifier
    required: true
    type: string

  userId:
    name: userId
    in: path
    description: user identifier
    required: true
    type: string


definitions:

  PatchRequest:
    type: object
    properties:
      resource:
        type: string
      changes:
        type: array
        items:
          type: object
          properties:
            op:
              type: string
              enum: ["add", "remove", "replace", "test", "copy", "move"]
            path:
              type: string
            from:
              type: string
            value: {}
          required:
            - op
            - path
    required:
    - resource
    - changes

  CreateMeetingRoomRequest:
    type: object
    properties:
      name:
        type: string
      resources:
        type: array
        items:
          type: string
    required:
      - name
      - resources

  ActionResponse:
    type: object
    properties:
      requestURL:
        type: string
      action:
        type: string
      status:
        type: number
      message:
        type: string
      timestamp:
        type: string
        format: date-time
    required:
      - requestURL
      - action
      - status
      - message
      - timestamp

  MeetingRoomInfo:
    type: object
    properties:
      name:
        type: string
      resources:
        type: array
        items:
          type: string
      createdAt:
        type: string
        format: date-time
    required:
      - name
      - resources
      - createdAt

  ListOfMeetingRoomInfo:
    type: object
    properties:
      rooms:
        type: array
        items:
          $ref: "#/definitions/MeetingRoomInfo"
    required:
      - rooms

  CreateUserRequest:
    type: object
    properties:
      givenName:
        type: string
      familyName:
        type: string
      email:
        type: string
    required:
      - givenName
      - familyName
      - email

  UserInfo:
    type: object
    properties:
      userId:
        type: string
      givenName:
        type: string
      familyName:
        type: string
      email:
        type: string
      createdAt:
        type: string
        format: date-time
    required:
      - userId
      - givenName
      - familyName
      - email
      - createdAt

  ListOfUserInfo:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/UserInfo"
    required:
      - users

  CreateMeetingRequest:
    type: object
    properties:
      name:
        type: string
        description: meeting name
      description:
        type: string
      startDateTime:
        type: string
        format: date-time
        description: meeting start
      endDateTime:
        type: string
        format: date-time
        description: meeting end
      participants:
        type: array
        description: list of participants, first participant is organizer
        items:
          description: user email
          type: string
      room:
        type: string
        description: room name
    required:
      - name
      - startDateTime
      - endDateTime
      - participants

  MeetingInfo:
    type: object
    properties:
      meetingId:
        type: string
        description: meeting identifier
      name:
        type: string
        description: meeting name
      description:
        type: string
      startDateTime:
        type: string
        format: date-time
        description: meeting start
      endDateTime:
        type: string
        format: date-time
        description: meeting end
      createdAt:
        type: string
        format: date-time
      participants:
        type: array
        description: list of participants, first participant is organizer
        items:
          description: user email
          type: string
      room:
        type: string
        description: room name
    required:
      - meetingId
      - name
      - participants
      - room
      - startDateTime
      - endDateTime
      - createdAt

  ListOfMeetingInfo:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/MeetingInfo"
    required:
      - meetings

  MeetingSuggestionRequest:
    type: object
    properties:
      participants:
        description: participant list for suggested meeting times
        type: array
        items:
          type: string
          description: participant email
      resources:
        description: list of resource names
        type: array
        items:
          type: string
          description: resource name
      startTime:
        type: number
        description: workday starting hour (0-23). default 7AM = 7
      endTime:
        type: number
        description: workday end hour (0-23). default 5PM = 17
      numDaysAhead:
        type: number
        description: number of days ahead to search. default 3
      duration:
        type: string
        description: meeting duration. default 1H
    required:
      - participants

  MeetingSuggestionResponse:
    type: object
    properties:
      requestURL:
        type: string
      action:
        type: string
      status:
        type: number
      timestamp:
        type: string
        format: date-time
      suggestions:
        description: a list of suggested meeting times and rooms
        type: array
        items:
          type: object
          properties:
            startDateTime:
              type: string`
              description: time slot start datetime
              format: date-time
            endDateTime:
              type: string`
              description: time slot end datetime
              format: date-time
            rooms:
              type: array
              description: list of room names available during that time slot
              items:
                type: string
                description: room name

    required:
      - requestURL
      - action
      - status
      - timestamp
      - suggestions